{"version":3,"sources":["utils/hooks/UseInputReducer.js","components/SimpleInput.js","App.js","index.js"],"names":["inputsChangeHandler","prevState","action","type","nameIputValue","isValid","UseInputReducer","validateState","useReducer","inputState","dispatchInputState","valueIsvaled","hasError","value","valueChangeHandler","event","target","inputBlurHandler","SimpleInput","props","trim","enteredName","enteredNameIsValid","nameInputHasError","nameChangeHandler","nameBlurChangeHandler","includes","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurChangeHandler","formIsValid","nameInputClasses","emailInputClasses","onSubmit","preventDefault","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"gNAEMA,EAAsB,SAACC,EAAWC,GACvC,MAAoB,eAAhBA,EAAOC,KACH,2BACHF,GADJ,IAECG,cAAeF,EAAOE,gBAGJ,eAAhBF,EAAOC,KACH,2BACHF,GADJ,IAECI,QAASH,EAAOG,eAHlB,GAoCcC,EA5BS,SAACC,GACxB,MAAyCC,qBAAWR,EAAqB,CACxEI,cAAe,GACfC,SAAS,IAFV,mBAAOI,EAAP,KAAmBC,EAAnB,KAIMC,EAAeJ,EAAcE,EAAWL,eACxCQ,GAAYD,GAAgBF,EAAWJ,QAc7C,MAAO,CACNQ,MAAOJ,EAAWL,cAClBC,QAASM,EACTC,WACAE,mBAhB0B,SAACC,GAC3BL,EAAmB,CAClBP,KAAM,aACNC,cAAeW,EAAMC,OAAOH,SAc7BI,iBAVwB,WACxBP,EAAmB,CAClBP,KAAM,aAAcE,SAAQ,O,OCoChBa,EAlEK,SAACC,GAEnB,MAMEb,GAAgB,SAACO,GAAD,MAA4B,KAAjBA,EAAMO,UAL1BC,EADT,EACER,MACSS,EAFX,EAEEjB,QACUkB,EAHZ,EAGEX,SACoBY,EAJtB,EAIEV,mBACkBW,EALpB,EAKER,iBAEF,EAMKX,GAAgB,SAACO,GAAD,OAAWA,EAAMa,SAAS,QALtCC,EADT,EACEd,MACSe,EAFX,EAEEvB,QACUwB,EAHZ,EAGEjB,SACoBkB,EAJtB,EAIEhB,mBACkBiB,EALpB,EAKEd,iBAIEe,GAAc,EACdV,GAAqBM,IACvBI,GAAc,GAGhB,IAMMC,EAAmBV,EACrB,uBACA,eAEEW,EAAoBL,EACtB,uBACA,eACJ,OACE,uBAAMM,SAdsB,SAACpB,GAC7BA,EAAMqB,kBAaN,UACE,sBAAKC,UAAWJ,EAAhB,UACE,uBAAOK,QAAQ,OAAf,uBACA,uBACEnC,KAAK,OACLoC,GAAG,OACH1B,MAAOQ,EACPmB,SAAUhB,EACViB,OAAQhB,IAETF,GAAqB,0DAEvB,sBAAKc,UAAWH,EAAhB,UACA,uBAAOI,QAAQ,OAAf,wBACC,uBACEnC,KAAK,QACLoC,GAAG,QACH1B,MAAOc,EACPa,SAAUV,EACVW,OAAQV,IAETF,GAAsB,0DAEzB,qBAAKQ,UAAU,eAAf,SACE,wBAAQK,UAAWV,EAAnB,0BCpDOW,MAVf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCDNO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.08024062.chunk.js","sourcesContent":["import { useReducer } from 'react'\r\n\r\nconst inputsChangeHandler = (prevState, action) => {\r\n\tif (action.type === 'NAME_INPUT') {\r\n\t\treturn {\r\n\t\t\t...prevState,\r\n\t\t\tnameIputValue: action.nameIputValue,\r\n\t\t}\r\n\t}\r\n\tif (action.type === 'BLUR_INPUT') {\r\n\t\treturn {\r\n\t\t\t...prevState,\r\n\t\t\tisValid: action.isValid,\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst UseInputReducer = (validateState) => {\r\n\tconst [inputState, dispatchInputState] = useReducer(inputsChangeHandler, {\r\n\t\tnameIputValue: '',\r\n\t\tisValid: false,\r\n\t})\r\n\tconst valueIsvaled = validateState(inputState.nameIputValue)\r\n\tconst hasError = !valueIsvaled && inputState.isValid\r\n\r\n\tconst valueChangeHandler = (event) => {\r\n\t\tdispatchInputState({\r\n\t\t\ttype: 'NAME_INPUT',\r\n\t\t\tnameIputValue: event.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\tconst inputBlurHandler = () => {\r\n\t\tdispatchInputState({\r\n\t\t\ttype: 'BLUR_INPUT', isValid:true\r\n\t\t})\r\n\t}\r\n\treturn {\r\n\t\tvalue: inputState.nameIputValue,\r\n\t\tisValid: valueIsvaled,\r\n\t\thasError,\r\n\t\tvalueChangeHandler,\r\n\t\tinputBlurHandler,\r\n\t}\r\n}\r\nexport default UseInputReducer\r\n","import React from 'react';\n// import UseInput  from '../utils/hooks/UseInput';\nimport UseInputReducer from '../utils/hooks/UseInputReducer';\n\nconst SimpleInput = (props) => {\n  // alias\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,//pustoi emesbi ,onblur proverka\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurChangeHandler\n  }=UseInputReducer((value) => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurChangeHandler\n  }  = UseInputReducer((value) => value.includes('@'));\n\n\n  let formIsValid = false;\n  if (enteredNameIsValid &&enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;//submittin proverkasy\n    }\n  };\n  const nameInputClasses = nameInputHasError\n    ? 'form-control invalid'\n    : 'form-control';\n    \n  const emailInputClasses = emailInputHasError\n    ? 'form-control invalid'\n    : 'form-control';\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          value={enteredName}\n          onChange={nameChangeHandler}\n          onBlur={nameBlurChangeHandler}\n        />\n        {nameInputHasError && <p>Name must not be empty</p>}\n       </div>\n       <div className={emailInputClasses}>\n       <label htmlFor='name'>Your Email</label>\n        <input\n          type='eamil'\n          id='email'\n          value={enteredEmail}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurChangeHandler}\n        />\n        {emailInputHasError && <p>Name must not be empty</p>}\n       </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\nexport default SimpleInput;","import SimpleInput from './components/SimpleInput';\n\n// import BasicForm from \"./components/BasicForm\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SimpleInput />\n      {/* <BasicForm/> */}\n  \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}